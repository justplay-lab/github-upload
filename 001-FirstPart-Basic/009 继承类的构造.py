# 继承类的构造方法有以下两种。
"""
（1）经典类的写法：父类名称.init(self,参数1,参数2,…)。
（2）新式类的写法：super(子类,self).init(参数1,参数2,…)。
在定义子类的构造函数时，只有先继承再构造，才能继承父类的属性。
子类的方法如果和父类的方法重名，子类就会覆盖掉父类，这就是继承“多态”。调用方只管调用，不管细节，而新增一个子类时，只要确保新方法编写正确，而不用管原来的代码，这就是著名的“开闭”原则。
（1）对扩展开放：允许新增子类；
（2）对修改封闭：不需要修改依赖父类的函数。
"""
from group import Group


b = Group('野原新之助', 5)       # 定义子类实例
print(b.classroom)             # 访问父类属性
print(b.Teacher)               # 访问子类新增的属性
print(b.favorite())            # 子类新增方法
print(b.displayCount())        # 子类方法与父类重名，覆盖父类
